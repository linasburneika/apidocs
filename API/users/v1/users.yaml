openapi: 3.0.1
info:
  title: Users
  description: |
    ## Users API

    The Users API provides the ability to retrieve the user profile for a signed in user.

    A Bentley user account is required to use Bentley services. A developer needs to sign in to their Bentley account in order to try an API or register an application in the iTwin Platform portal. An end user of an iTwin Platform application must sign in to their Bentley account in order to establish their identity and authorize access to their data.

    A user account is associated with a single organization or company. The Users API provides the ability to manage the users in an organization. A Bentley user account includes a user profile which contains information about a user's name, contact information, and language preference. The Users API provides an endpoint to retrieve information from a user's profile.

    test
  version: v1
paths:
  /users:
    get:
      tags:
        - UserSearch
      parameters:
        - name: $search
          in: query
          schema:
            type: string
        - $ref: 'https://raw.githubusercontent.com/linasburneika/apidocs/main/lib/shared.json#/components/parameters/AuthParameter'
        - $ref: 'https://raw.githubusercontent.com/linasburneika/apidocs/main/lib/shared.json#/components/parameters/AcceptParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersModel'
        '401':
          $ref: 'https://raw.githubusercontent.com/linasburneika/apidocs/main/lib/shared.json#/components/responses/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModelWrapper'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModelWrapper'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModelWrapper'
        '429':
          $ref: 'https://raw.githubusercontent.com/linasburneika/apidocs/main/lib/shared.json#/components/responses/429'
      security:
        - oauth2:
            - ''
  /users/me:
    get:
      tags:
        - UserSearch
      operationId: GetMe
      parameters:
        - $ref: 'https://raw.githubusercontent.com/linasburneika/apidocs/main/lib/shared.json#/components/parameters/AuthParameter'
        - $ref: 'https://raw.githubusercontent.com/linasburneika/apidocs/main/lib/shared.json#/components/parameters/AcceptParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
        '401':
          $ref: 'https://raw.githubusercontent.com/linasburneika/apidocs/main/lib/shared.json#/components/responses/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModelWrapper'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModelWrapper'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModelWrapper'
        '429':
          $ref: 'https://raw.githubusercontent.com/linasburneika/apidocs/main/lib/shared.json#/components/responses/429'
      security:
        - oauth2:
            - ''
  /users/{id}:
    get:
      tags:
        - UserSearch
      operationId: GetSingleById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - $ref: 'https://raw.githubusercontent.com/linasburneika/apidocs/main/lib/shared.json#/components/parameters/AuthParameter'
        - $ref: 'https://raw.githubusercontent.com/linasburneika/apidocs/main/lib/shared.json#/components/parameters/AcceptParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMinimalModel'
        '401':
          $ref: 'https://raw.githubusercontent.com/linasburneika/apidocs/main/lib/shared.json#/components/responses/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModelWrapper'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModelWrapper'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModelWrapper'
        '429':
          $ref: 'https://raw.githubusercontent.com/linasburneika/apidocs/main/lib/shared.json#/components/responses/429'
      security:
        - oauth2:
            - ''
  /users/GetByIdList:
    post:
      tags:
        - UserSearch
      operationId: GetByIdList
      parameters:
        - $ref: 'https://raw.githubusercontent.com/linasburneika/apidocs/main/lib/shared.json#/components/parameters/AuthParameter'
        - $ref: 'https://raw.githubusercontent.com/linasburneika/apidocs/main/lib/shared.json#/components/parameters/AcceptParameter'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
          text/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
          application/*+json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersModel'
        '401':
          $ref: 'https://raw.githubusercontent.com/linasburneika/apidocs/main/lib/shared.json#/components/responses/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModelWrapper'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModelWrapper'
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModelWrapper'
        '429':
          $ref: 'https://raw.githubusercontent.com/linasburneika/apidocs/main/lib/shared.json#/components/responses/429'
      security:
        - oauth2:
            - ''
components:
  schemas:
    ErrorDetails:
      type: object
      properties:
        code:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        target:
          type: string
          nullable: true
      additionalProperties: false
    ErrorResponseModel:
      type: object
      properties:
        code:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetails'
          nullable: true
      additionalProperties: false
    ErrorResponseModelWrapper:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponseModel'
      additionalProperties: false
    UserInfo:
      type: object
      properties:
        id:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        givenName:
          type: string
          nullable: true
        surname:
          type: string
          nullable: true
        organizationName:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
          readOnly: true
        alternateEmail:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        createdDateTime:
          type: string
          nullable: true
      additionalProperties: false
    UserInfoMinimal:
      type: object
      properties:
        id:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        givenName:
          type: string
          nullable: true
        surname:
          type: string
          nullable: true
        organizationName:
          type: string
          nullable: true
      additionalProperties: false
    UserMinimalModel:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserInfoMinimal'
      additionalProperties: false
    UserModel:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserInfo'
      additionalProperties: false
    UsersModel:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserInfoMinimal'
          nullable: true
      additionalProperties: false
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://qa-ims.bentley.com/connect/authorize
          tokenUrl: https://qa-ims.bentley.com/connect/token
          scopes:
            user-search-service-internal: Access to the User Search API

